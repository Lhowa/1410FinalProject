package instaClone;

import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.awt.FlowLayout;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.JScrollPane;
import javax.swing.JLabel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import java.awt.Font;
import java.awt.CardLayout;
import java.awt.Color;

import javax.swing.JMenuBar;
import java.awt.event.ActionListener;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.SwingConstants;
import javax.swing.ScrollPaneConstants;
import javax.swing.ScrollPaneLayout;
import javax.swing.JFileChooser;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Paint;

import javax.swing.JProgressBar;
import javax.swing.JTextField;
import javax.swing.BoxLayout;
import javax.swing.border.LineBorder;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 * Class InstaClone, this class contains the main method as well as the GUI and
 * Cards for each "Page".
 */
public class InstaClone extends JFrame {

	File fileToSave;
	String currentFilePathString;
	JLabel filePathLabel;
	int count = 0;
	private JPanel contentPane;
	JProgressBar progressBar;
	JButton uploadbutton;
	JButton uploadMenuButton = new JButton("Upload");
	JButton homeMenuButton = new JButton("Home");
	JButton profileMenuButton = new JButton("Profile");
	JPanel imagePanel = new JPanel();// Creates the panel to store the images. This will later be placed on the
										// scrollPane

	// The below file path will need to be altered to the location of users image
	// folder within the package.******************
	String imagePathPrepend = "C:\\Users\\Arthur\\Desktop\\Eclipse\\1410_GroupProject\\src\\instaClone\\images\\";
	String stockImagePathPrepend = "/instaClone/workingimages/";

	public JTextField captionTextField;
	String imageUploadCaption;
	public List<String> imagepaths = new ArrayList<>();
	public List<String> imageCaptions = new ArrayList<>();

	public List<String> stockImageCaptions = new ArrayList<>();
	public List<String> stockImagepaths = new ArrayList<>();
	JScrollPane scrollPane;
	JLabel testProfileImage4 = new JLabel();
	JLabel testProfileImage5 = new JLabel();
	JLabel testProfileImage6 = new JLabel();
	JLabel testProfileImage7 = new JLabel();
	JLabel testProfileImage8 = new JLabel();
	JPanel profileImagesPanel = new JPanel();// Images will be placed on this panel, this panel is then placed on the
												// scrollPane
	int img1Count, img2Count, img3Count, img4Count, img5Count = 0;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					InstaClone frame = new InstaClone();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public InstaClone() {
		setResizable(false);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 400, 600);// Default Size

		/**
		 * Generates the menu bar, navigates to the three pages.
		 */
		menuBarMethod();
		contentPane.setLayout(new CardLayout(0, 0));

		JPanel homePanel = homePagePanelMethod();
		contentPane.add(homePanel, "p1");

		JPanel uploadPanel = uploadPagePanelMethod();
		contentPane.add(uploadPanel, "p2");

		JPanel liveFeedPanel = profilePagePanelMethod();
		contentPane.add(liveFeedPanel, "p3");
	}

	private JPanel profilePagePanelMethod() {
		JPanel profilePanel = new JPanel();
		profilePanel.setLayout(new BorderLayout(0, 0));

		JPanel profileHeaderPanel = new JPanel();// Used to house the profile image and User's name
		profileHeaderPanel.setBorder(new EmptyBorder(40, 0, 40, 0));
		profilePanel.add(profileHeaderPanel, BorderLayout.NORTH);
		profileHeaderPanel.setLayout(new BorderLayout(0, 0));

		JLabel profileHeaderUsername = new JLabel("<html>Username:<br> 2B_||_!2B");
		profileHeaderUsername.setHorizontalAlignment(SwingConstants.CENTER);
		profileHeaderUsername.setFont(new Font("Tahoma", Font.PLAIN, 18));
		profileHeaderUsername.setHorizontalTextPosition(SwingConstants.CENTER);
		profileHeaderUsername.setBorder(new EmptyBorder(0, 50, 0, 0));
		profileHeaderPanel.add(profileHeaderUsername, BorderLayout.CENTER);

		JLabel profileImage = new JLabel("");// This will be used to show an image of the User
		profileImage.setHorizontalTextPosition(SwingConstants.RIGHT);
		profileImage
				.setIcon(new ImageIcon(InstaClone.class.getResource("/instaClone/workingimages/profilepicture.jpg")));
		profileImage.setBorder(new EmptyBorder(0, 0, 0, 50));
		profileImage.setHorizontalAlignment(SwingConstants.RIGHT);
		profileHeaderPanel.add(profileImage, BorderLayout.EAST);

		profileImagesPanel.setLayout(new GridLayout(3, 3, 5, 5));// 1row X 3collumn with no height gap and 1px width
																	// gap, add more rows for over 3 pic's

		// Below are the test Images, once these are forced to a smaller size these will
		// fit to screen. Horizontal scrolling is disables
		// stockImagePathPrepend will need to be changed if not already done.

		JScrollPane profileScrollPane = new JScrollPane(profileImagesPanel);
		profileScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
		profilePanel.add(profileScrollPane, BorderLayout.CENTER);

		// adds the test images to the profileImagePanel

		profileScrollPane.setViewportView(profileImagesPanel);// Display's the imagePanel on the scrollPane

		testProfileImage4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		testProfileImage4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

		testProfileImage5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		testProfileImage5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

		testProfileImage6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		testProfileImage6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

		testProfileImage7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		testProfileImage7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

		testProfileImage8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		testProfileImage8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

		return profilePanel;

	}

	/*********************************************************************************
	 * End Profile Page
	 */
	private JPanel uploadPagePanelMethod() {
		JPanel uploadPanel = new JPanel();
		uploadPanel.setLayout(new BorderLayout(0, 0));

		JLabel uploadLabel = new JLabel("Upload");
		uploadPanel.add(uploadLabel, BorderLayout.NORTH);
		uploadLabel.setHorizontalAlignment(SwingConstants.CENTER);

		JPanel subUploadPanel = new JPanel();
		subUploadPanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		subUploadPanel.setForeground(new Color(0, 0, 0));
		uploadPanel.add(subUploadPanel);
		subUploadPanel.setLayout(new GridLayout(0, 1, 0, 0));

		filePathLabel = new JLabel("<html>Select a file to upload. <br><ul> " + "Limit to Five (5) Uploads Only<br>"
				+ "To See Uploaded Images Please Cick Profile<br>" + "There is No Delete, So Choose Carefully </ul>");
		filePathLabel.setHorizontalAlignment(SwingConstants.CENTER);
		filePathLabel.setHorizontalTextPosition(SwingConstants.CENTER);
		subUploadPanel.add(filePathLabel);

		JButton browseButton = new JButton("Browse...");
		subUploadPanel.add(browseButton);
		captionTextField = new JTextField();
		captionTextField.addMouseListener(new MouseAdapter() {
			@Override
			public void mousePressed(MouseEvent e) {
				if (captionTextField.isEnabled() == true) {
					captionTextField.setText("");
				}

			}
		});
		captionTextField.setText("Write Caption Here....\r\n");
		subUploadPanel.add(captionTextField);
		captionTextField.setEnabled(false);
		captionTextField.setColumns(10);
		progressBar = new JProgressBar();
		subUploadPanel.add(progressBar);

		uploadbutton = new JButton("Upload...");
		subUploadPanel.add(uploadbutton);
		uploadbutton.setEnabled(false);
		uploadbutton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				count++;
			
				File newFile = new File(imagePathPrepend + "image" + count + ".jpg");
				fileToSave.renameTo(newFile);
				imagepaths.add("image" + count + ".jpg");// adds image path to array

				
				imageUploadCaption = captionTextField.getText();// set variable to image caption
		
				imageCaptions.add(imageUploadCaption);// adds caption to array
				
				progressBar.setValue(100);
				captionTextField.setText("");
			
			

			}
		});

		/**
		 * Allows you to browse for images, "uploads" the image, then saves the filepath
		 * to the array.
		 */
		browseButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				JFileChooser fileChooser = new JFileChooser();
				fileChooser.setFileFilter(new FileNameExtensionFilter("Image Files", "jpg", "png", "gif", "jpeg"));
				if (fileChooser.showOpenDialog(contentPane) == JFileChooser.APPROVE_OPTION) {
					fileToSave = fileChooser.getSelectedFile();
					currentFilePathString = fileChooser.getSelectedFile().toString();
					filePathLabel.setText("File to Upload: " + currentFilePathString);
					uploadbutton.setEnabled(true);
					captionTextField.setEnabled(true);

				}
			}
		});
		return uploadPanel;
	}

	/*********************************************************************************
	 * End Upload Page
	 */

	private JPanel homePagePanelMethod() {
		JPanel homePanel = new JPanel();
		homePanel.setLayout(new BorderLayout(0, 0));
		JLabel homeLabel = new JLabel("Home");
		homePanel.add(homeLabel, BorderLayout.NORTH);
		homeLabel.setHorizontalAlignment(SwingConstants.CENTER);

		scrollPane = new JScrollPane();
		scrollPane.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
		homePanel.add(scrollPane, BorderLayout.CENTER);

		// Stock image and caption logic below...
		Collections.addAll(stockImagepaths, "stockimage1.png","stockimage2.jpg","stockimage3.jpg");
		
		
		Collections.addAll(stockImageCaptions, "Internet Comment 1", "Internet Comment 2", "Internet Comment 3");


		JLabel stockuploadedImage1 = new JLabel();// creates a label to house the first image
		stockuploadedImage1.setIcon(
				new ImageIcon(InstaClone.class.getResource(stockImagePathPrepend + stockImagepaths.get(0).toString()))); // sets
																															// image
																															// to
																															// first
																															// position
																															// in
																															// array

		stockuploadedImage1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		stockuploadedImage1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		imagePanel.add(stockuploadedImage1);// forcing first image in array and adding to imagePanel
		JLabel stockTextLabel1 = new JLabel();// creates a label to house the first caption
		stockTextLabel1.setHorizontalTextPosition(SwingConstants.LEFT);
		stockTextLabel1.setVerticalAlignment(SwingConstants.TOP);
		stockTextLabel1.setHorizontalAlignment(SwingConstants.CENTER);
		stockTextLabel1.setText(stockImageCaptions.get(0));// sets text tom first caption in array
		imagePanel.add(stockTextLabel1);
		JLabel stockuploadedImage2 = new JLabel();// creates a label to house the first image
		stockuploadedImage2.setIcon(
				new ImageIcon(InstaClone.class.getResource(stockImagePathPrepend + stockImagepaths.get(1).toString())));// sets
																														// image
																														// to
																														// first
																														// position
																														// in
																														// array
		stockuploadedImage2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		stockuploadedImage2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		imagePanel.add(stockuploadedImage2);// forcing first image in array and adding to imagePanel
		JLabel stockTextLabel2 = new JLabel();// creates a label to house the second caption
		stockTextLabel2.setVerticalAlignment(SwingConstants.TOP);
		stockTextLabel2.setHorizontalAlignment(SwingConstants.CENTER);
		stockTextLabel2.setText(stockImageCaptions.get(1));// sets text tom second caption in array
		imagePanel.add(stockTextLabel2);
		JLabel stockuploadedImage3 = new JLabel();// creates a label to house the second image
		stockuploadedImage3.setIcon(
				new ImageIcon(InstaClone.class.getResource(stockImagePathPrepend + stockImagepaths.get(2).toString())));// sets
																														// image
																														// to
																														// second
																														// position
																														// in
																														// array
		stockuploadedImage3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		stockuploadedImage3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		imagePanel.add(stockuploadedImage3);// forcing third image in array and adding to imagePanel
		JLabel stockTextLabel3 = new JLabel();// creates a label to house the third caption
		stockTextLabel3.setVerticalAlignment(SwingConstants.TOP);
		stockTextLabel3.setHorizontalAlignment(SwingConstants.CENTER);
		stockTextLabel3.setText(stockImageCaptions.get(2));// sets text to third caption in array
		imagePanel.add(stockTextLabel3);

		scrollPane = new JScrollPane(imagePanel);// adds the imagePanel to the scrollPanel
		imagePanel.setLayout(new GridLayout(0, 1, 0, 0));// Forces 1 by 1 images
		scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
		homePanel.add(scrollPane, BorderLayout.CENTER);

		return homePanel;
	}

	/*********************************************************************************
	 * End HomePage
	 */

	private void menuBarMethod() {
		JMenuBar menuBar = new JMenuBar();
		menuBar.setBorder(new EmptyBorder(10, 0, 10, 0));
		setJMenuBar(menuBar);

	

		JPanel panel = new JPanel();
		panel.setBorder(new EmptyBorder(0, 10, 0, 10));
		menuBar.add(panel);
		panel.setLayout(new GridLayout(1, 0, 10, 0));
		uploadMenuButton.setIcon(new ImageIcon(InstaClone.class.getResource("/resources/uploadSize25Pxl.png")));
		panel.add(uploadMenuButton);
		uploadMenuButton.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseEntered(MouseEvent e) {
				mouseEnterHoverColorChange(uploadMenuButton);
			}

			@Override
			public void mouseExited(MouseEvent e) {
				mousExitHoverColorChange(uploadMenuButton);
			}

		});
		uploadMenuButton.setBorder(new EmptyBorder(0, 0, 0, 0));
		uploadMenuButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				CardLayout c = (CardLayout) (contentPane.getLayout());
				c.show(contentPane, "p2");
				changeBackgroundWhenClick(uploadMenuButton);
			}

		});
		homeMenuButton.setIcon(new ImageIcon(InstaClone.class.getResource("/resources/homeSize25Pxl.png")));
		homeMenuButton.setBackground(backgroundColorPicker());
		panel.add(homeMenuButton);
		homeMenuButton.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseEntered(MouseEvent e) {
				mouseEnterHoverColorChange(homeMenuButton);
			}

			@Override
			public void mouseExited(MouseEvent e) {
				mousExitHoverColorChange(homeMenuButton);
			}
		});

		homeMenuButton.setBorder(new EmptyBorder(0, 0, 0, 0));
		homeMenuButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				CardLayout c = (CardLayout) (contentPane.getLayout());
				c.show(contentPane, "p1");
				changeBackgroundWhenClick(homeMenuButton);
			}

		});

		// This is the new refresh button
		homeMenuButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				{
					// Test data below *******************
					if (imagepaths.size() >= 1 && img1Count < 1) {
						JLabel uploadedImage1 = new JLabel();// creates a label to house the first image
						uploadedImage1.setIcon(
								transformImageForHome(new ImageIcon(imagePathPrepend + imagepaths.get(0).toString())));// sets
																														// image
																														// to
																														// first
																														// position
																														// in
																														// array
						uploadedImage1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
						uploadedImage1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
						testProfileImage4.setIcon(transformImageForProfile(
								new ImageIcon(imagePathPrepend + imagepaths.get(0).toString())));
						profileImagesPanel.add(testProfileImage4);

						JLabel textLabel1 = new JLabel();// creates a label to house the first caption
						textLabel1.setHorizontalAlignment(SwingConstants.CENTER);
						textLabel1.setText(imageCaptions.get(0));// sets text tom first caption in array
						textLabel1.setVerticalAlignment(SwingConstants.TOP);

						imagePanel.add(uploadedImage1);// forcing first image in array and adding to imagePanel
						imagePanel.add(textLabel1);// forcing first caption in array and adding to imagePanel
						img1Count++;
					
						
						
					}

					if (imagepaths.size() >= 2 && img2Count < 1) {
						JLabel uploadedImage2 = new JLabel();// creates a label to house the second image
						uploadedImage2.setIcon(
								transformImageForHome(new ImageIcon(imagePathPrepend + imagepaths.get(1).toString())));// sets
																														// the
																														// image
																														// to
																														// second
																														// image
																														// in
																														// array
						uploadedImage2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
						uploadedImage2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

						testProfileImage5.setIcon(transformImageForProfile(
								new ImageIcon(imagePathPrepend + imagepaths.get(1).toString())));
						profileImagesPanel.add(testProfileImage5);

						JLabel textLabel2 = new JLabel();// creates the second label for the second caption
						textLabel2.setHorizontalAlignment(SwingConstants.CENTER);
						textLabel2.setText(imageCaptions.get(1));// sets the text to be the second in the caption array
						textLabel2.setVerticalAlignment(SwingConstants.TOP);
						imagePanel.add(uploadedImage2);// forcing second image in array and adding to imagePanel
						imagePanel.add(textLabel2);// forcing second image in array and adding to imagePanel
						img2Count++;
					}

					if (imagepaths.size() >= 3 && img3Count < 1) {
						JLabel uploadedImage3 = new JLabel();// creates a label to house the second image
						uploadedImage3.setIcon(
								transformImageForHome(new ImageIcon(imagePathPrepend + imagepaths.get(2).toString())));// sets
																														// the
																														// image
																														// to
																														// second
																														// image
																														// in
																														// array
						uploadedImage3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
						uploadedImage3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

						testProfileImage6.setIcon(transformImageForProfile(
								new ImageIcon(imagePathPrepend + imagepaths.get(2).toString())));
						profileImagesPanel.add(testProfileImage6);

						JLabel textLabel3 = new JLabel();// creates the second label for the second caption
						textLabel3.setHorizontalAlignment(SwingConstants.CENTER);
						textLabel3.setText(imageCaptions.get(2));// sets the text to be the second in the caption array
						textLabel3.setVerticalAlignment(SwingConstants.TOP);
						imagePanel.add(uploadedImage3);// forcing second image in array and adding to imagePanel
						imagePanel.add(textLabel3);// forcing second image in array and adding to imagePanel
						img3Count++;
					}

					if (imagepaths.size() >= 4 && img4Count < 1) {
						JLabel uploadedImage4 = new JLabel();// creates a label to house the second image
						uploadedImage4.setIcon(
								transformImageForHome(new ImageIcon(imagePathPrepend + imagepaths.get(3).toString())));// sets
																														// the
																														// image
																														// to
																														// second
																														// image
																														// in
																														// array
						uploadedImage4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
						uploadedImage4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

						testProfileImage7.setIcon(transformImageForProfile(
								new ImageIcon(imagePathPrepend + imagepaths.get(3).toString())));
						profileImagesPanel.add(testProfileImage7);

						JLabel textLabel4 = new JLabel();// creates the second label for the second caption
						textLabel4.setHorizontalAlignment(SwingConstants.CENTER);
						textLabel4.setText(imageCaptions.get(3));// sets the text to be the second in the caption array
						textLabel4.setVerticalAlignment(SwingConstants.TOP);
						imagePanel.add(uploadedImage4);// forcing second image in array and adding to imagePanel
						imagePanel.add(textLabel4);// forcing second image in array and adding to imagePanel
						img4Count++;

					}

					if (imagepaths.size() >= 5 && img5Count < 1) {
						JLabel uploadedImage5 = new JLabel();// creates a label to house the second image
						uploadedImage5.setIcon(
								transformImageForHome(new ImageIcon(imagePathPrepend + imagepaths.get(4).toString())));// sets
																														// the
																														// image
																														// to
																														// second
																														// image
																														// in
																														// array
						uploadedImage5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
						uploadedImage5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

						testProfileImage8.setIcon(transformImageForProfile(
								new ImageIcon(imagePathPrepend + imagepaths.get(4).toString())));
						profileImagesPanel.add(testProfileImage8);

						JLabel textLabel5 = new JLabel();// creates the second label for the second caption
						textLabel5.setHorizontalAlignment(SwingConstants.CENTER);
						textLabel5.setText(imageCaptions.get(4));// sets the text to be the second in the caption array
						textLabel5.setVerticalAlignment(SwingConstants.TOP);
						imagePanel.add(uploadedImage5);// forcing second image in array and adding to imagePanel
						imagePanel.add(textLabel5);// forcing second image in array and adding to imagePanel

						img5Count++;
						
					}

					scrollPane.setViewportView(imagePanel);// adds the image panel to the scrollPane itself
					// End Test **********************

					// This will be used to generate a new label forEach image Path in the array.
//					for (String p : imagepaths) {
//					}

				}

			}
		});

		profileMenuButton.setIcon(new ImageIcon(InstaClone.class.getResource("/resources/profileSize25Pxl.png")));
		panel.add(profileMenuButton);
		profileMenuButton.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseEntered(MouseEvent e) {
				mouseEnterHoverColorChange(profileMenuButton);
			}

			@Override
			public void mouseExited(MouseEvent e) {
				mousExitHoverColorChange(profileMenuButton);
			}
		});

		profileMenuButton.setBorder(new EmptyBorder(0, 0, 0, 0));
		profileMenuButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				CardLayout c = (CardLayout) (contentPane.getLayout());
				c.show(contentPane, "p3");
				changeBackgroundWhenClick(profileMenuButton);
			}
		});
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
	}

	/**
	 * Changes the background of the icon when clicked
	 * 
	 * @param button
	 */
	private void changeBackgroundWhenClick(JButton button) {
		uploadMenuButton.setBackground(new JButton().getBackground());
		homeMenuButton.setBackground(new JButton().getBackground());
		profileMenuButton.setBackground(new JButton().getBackground());
		button.setBackground(backgroundColorPicker());
		
	}

	/**
	 * Changes the background of the icon when hovering over it.
	 * 
	 * @param button
	 */
	private void mouseEnterHoverColorChange(JButton button) {
		button.setBackground(button.getBackground().darker());

	}

	/**
	 * Changes the background of the icon back to what it should be.
	 * 
	 * @param button
	 */
	private void mousExitHoverColorChange(JButton button) {
		if (button.getBackground().equals(new JButton().getBackground().darker())) {
			button.setBackground(new JButton().getBackground());
		} else if (button.getBackground().equals(backgroundColorPicker().darker())) {
			button.setBackground(backgroundColorPicker());
		} else if (button.getBackground().equals(backgroundColorPicker())) {
			button.setBackground(backgroundColorPicker());
		} else {
			button.setBackground(new JButton().getBackground());
		}

	}

	/**
	 * Chose the background of the buttons you like.
	 * 
	 * @return
	 */

	private Color backgroundColorPicker() {
		return Color.pink;
	}

	/**
	 * transforms the image into a 120pxl by 120pxl image. 
	 * @param imageIcon
	 * @return
	 */
	private ImageIcon transformImageForProfile(ImageIcon imageIcon) {
		Image image = imageIcon.getImage(); // transform it
		Image newimg = image.getScaledInstance(120, 120, java.awt.Image.SCALE_SMOOTH); // scale it the smooth way
		return imageIcon = new ImageIcon(newimg); // transform it back

	}

	/**
	 * transforms the image into a scaled image that is 360pxls wide 
	 * @param imageIcon
	 * @return
	 */
	private ImageIcon transformImageForHome(ImageIcon imageIcon) {
		Image image = imageIcon.getImage(); // transform it
		Image newimg = image.getScaledInstance(360, imageRatio(imageIcon), java.awt.Image.SCALE_SMOOTH); // scale it the
																											// smooth
																											// way
		return imageIcon = new ImageIcon(newimg); // transform it back

	}

	/**
	 * returns a ration of the image to keep the scaling correct
	 * @param image
	 * @return
	 */
	private int imageRatio(ImageIcon image) {
		double hight = image.getIconHeight();
		double width = image.getIconWidth();
		Double ratio = hight * 380 / width;

		return ratio.intValue();
	}

}
